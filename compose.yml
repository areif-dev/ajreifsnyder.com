networks:
  net:
    driver: bridge

services:
  authelia:
    image: authelia/authelia:latest
    container_name: authelia
    volumes:
      - ./authelia:/config
    networks:
      - net
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.authelia.rule=Host(`authelia.${DOMAIN}`)'
      - 'traefik.http.routers.authelia.entrypoints=https'
      - 'traefik.http.routers.authelia.tls=true'
      - 'traefik.http.routers.authelia.tls.certresolver=letsencrypt'
      - 'traefik.http.middlewares.authelia.forwardauth.address=http://authelia:9091/api/authz/forward-auth'
      - 'traefik.http.middlewares.authelia.forwardauth.trustForwardHeader=true'
      - 'traefik.http.middlewares.authelia.forwardauth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email'
    expose: 
      - 9091
    restart: unless-stopped
    environment: 
      - TZ="America/New_York"

  redis:
    image: redis:alpine
    container_name: redis
    volumes: 
      - ./redis:/data
    networks:
      - net 
    expose: 
      - 6379
    restart: unless-stopped
    environment: 
      - TZ="America/New_York"

  traefik:
    image: traefik:latest
    container_name: traefik
    volumes:
      - ./traefik:/etc/traefik 
      - /var/run/docker.sock:/var/run/docker.sock
    networks: 
      - net
    labels: 
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.rule=Host(`traefik.${DOMAIN}`)'
      - 'traefik.http.routers.api.entrypoints=https'
      - 'traefik.http.routers.api.service=api@internal'
      - 'traefik.http.routers.api.tls=true'
      - 'traefik.http.routers.api.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.api.middlewares=authelia@docker'
    ports:
      - '80:80'
      - '443:443'
    command:
      - '--api'
      - '--providers.docker.exposedByDefault=false'
      - '--entrypoints.http=true'
      - '--entrypoints.http.address=:80'
      - '--entrypoints.http.http.redirections.entrypoint.to=https'
      - '--entrypoints.http.http.redirections.entrypoint.scheme=https'
      - '--entrypoints.https=true'
      - '--entrypoints.https.address=:443'
      - '--certificatesResolvers.letsencrypt.acme.email=${ACME_EMAIL}'
      - '--certificatesResolvers.letsencrypt.acme.storage=/etc/traefik/acme.json'
      - '--certificatesResolvers.letsencrypt.acme.httpChallenge.entrypoint=http'
      - '--log=true'
      - '--log.level=DEBUG'

  baikal:
    image: ckulka/baikal:nginx
    container_name: baikal
    restart: unless-stopped
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.baikal.rule=Host(`dav.${DOMAIN}`)'
      - 'traefik.http.routers.baikal.entrypoints=https'
      - 'traefik.http.routers.baikal.tls=true'
      - 'traefik.http.routers.baikal.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.baikal.middlewares=authelia@docker'
      # 'Traefik middleware required for iOS, see https://github.com/ckulka/baikal-docker/issues/37.'
      - 'traefik.http.routers.baikal.middlewares=baikal-dav'
      - 'traefik.http.middlewares.baikal-dav.redirectregex.regex=https://(.*)/.well-known/(card|cal)dav'
      - 'traefik.http.middlewares.baikal-dav.redirectregex.replacement=https://$$1/dav.php/'
      - 'traefik.http.middlewares.baikal-dav.redirectregex.permanent=true'
    volumes:
      - ./baikal/config:/var/www/baikal/config
      - ./baikal/Specific:/var/www/baikal/Specific
    networks: 
      - net

  freshrss:
    image: freshrss/freshrss:latest
    container_name: freshrss 
    restart: unless-stopped 
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.freshrss.rule=Host(`freshrss.${DOMAIN}`)'
      - 'traefik.http.routers.freshrss.entrypoints=https'
      - 'traefik.http.routers.freshrss.tls=true'
      - 'traefik.http.routers.freshrss.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.freshrss.middlewares=authelia@docker'
    volumes: 
      - ./freshrss/data:/var/www/FreshRSS/data 
    networks:
      - net
    environment: 
      - TZ="America/New_York"
      - CRON_MIN="3,33"

  shopify-contact:
    image: shopify-contact
    container_name: shopify-contact 
    restart: unless-stopped
    ports: 
      - ${SHOPIFY_CONTACT_PORT}
    labels: 
      - 'traefik.enable=true'
      - 'traefik.http.routers.shopify-contact.rule=Host(`shopify-contact.${DOMAIN}`)'
      - 'traefik.http.routers.shopify-contact.entrypoints=https'
      - 'traefik.http.routers.shopify-contact.tls=true'
      - 'traefik.http.routers.shopify-contact.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.shopify-contact.middlewares=authelia@docker'
    volumes: 
      - ./shopify-contact/shopify-contact.db:/var/lib/shopify-contact/shopify-contact.db 
      - ./shopify-contact/conf.json:/etc/shopify-contact/conf.json
    networks:
      - net
